# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags: -X github.com/Geekgasm/brickdiff/build.Version={{.Version}} -X github.com/Geekgasm/brickdiff/build.Commit={{.Commit}} -X github.com/Geekgasm/brickdiff/build.Date={{.Date}}
    overrides:
      - goos: darwin
        goarch: arm64
        env:
          - CGO_ENABLED=1
      - goos: darwin
        goarch: amd64
        goamd64: v1
        env:
          - CGO_ENABLED=1
archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
brews:
  -
    # GitHub/GitLab repository to push the formula to
    tap:
      owner: Geekgasm
      name: homebrew-tap

      # Optionally a branch can be provided.
      # Defaults to the default repository branch.
      branch: main

    # Template for the url which is determined by the given Token (github,
    # gitlab or gitea)
    #
    # Default depends on the client.
    # url_template: "https://github.com/Geekgasm/brickdiff/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
    download_strategy: CurlDownloadStrategy

    # Allows you to add a custom require_relative at the top of the formula
    # template.
    # Default is empty
    # custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: geekgasm
      email: developer@geekgasm.eu

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    # caveats: "How to use this binary"

    # Your app's homepage.
    # Default is empty.
    # homepage: "https://example.com/"

    # Template of your app's description.
    # Default is empty.
    # description: "Software to create fast and easy drum rolls."

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "GPL3.0"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    # skip_upload: true

    # Custom block for brew.
    # Can be used to specify alternate downloads for devel or head releases.
    # Default is empty.
    # custom_block: |
    #   head "https://github.com/some/package.git"
    #   ...

    # Packages your package depends on.
    # dependencies:
    #   - name: git
    #   - name: zsh
    #     type: optional
    #   - name: fish
    #     version: v1.2.3
    #   # if providing both version and type, only the type will be taken into
    #   # account.
    #   - name: elvish
    #     type: optional
    #     version: v1.2.3


    # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash

    # Specify for packages that run as a service.
    # Default is empty.
    # plist: |
    #   <?xml version="1.0" encoding="UTF-8"?>
    #   # ...

    # Service block.
    #
    # Since: v1.7.
    # service: |
    #   run: foo/bar
    #   # ...

    # So you can `brew test` your formula.
    # Default is empty.
    # test: |
    #   system "#{bin}/foo --version"
    #   # ...

    # Custom install script for brew.
    # Default is 'bin.install "the binary name"'.
    # install: |
    #   bin.install "some_other_name"
    #   bash_completion.install "completions/foo.bash" => "foo"
    #   # ...

    # Custom post_install script for brew.
    # Could be used to do any additional work after the "install" script
    # Default is empty.
    # post_install: |
    #     etc.install "app-config.conf"
    #     ...

# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
